[{"path":"https://toddmccready.github.io/disize/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 disize authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"an-example-with-deseq2","dir":"Articles","previous_headings":"","what":"An example with DESeq2","title":"An introduction to disize","text":"see disize action, analyzing following dataset pasilla package DESeq2.","code":"suppressPackageStartupMessages({     library(pasilla)     library(dplyr)     library(disize)     library(DESeq2) })"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"reading-in-data","dir":"Articles","previous_headings":"An example with DESeq2","what":"Reading in data","title":"An introduction to disize","text":"","code":"# Grab filepaths counts_path <- system.file(     \"extdata\",     \"pasilla_gene_counts.tsv\",     package=\"pasilla\",     mustWork=TRUE ) metadata_path <- system.file(     \"extdata\",     \"pasilla_sample_annotation.csv\",     package=\"pasilla\",     mustWork=TRUE )  # Read in data counts <- as.matrix(read.csv(counts_path, sep = \"\\t\", row.names = \"gene_id\")) |>     t()  metadata <- read.csv(metadata_path) metadata <- metadata |>     dplyr::mutate(obs_id = sub(\"fb\", \"\", metadata$file)) |>     dplyr::select(obs_id, condition, type) |>     dplyr::mutate(across(c(condition, type), as.factor)) |>     dplyr::mutate(         id_1 = interaction(metadata$type, metadata$condition, sep = \":\"),         id_2 = obs_id     )"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"inspecting-the-study-design","dir":"Articles","previous_headings":"An example with DESeq2","what":"Inspecting the study design","title":"An introduction to disize","text":"dataset derived study investigating effect various RNA binding proteins (RBPs) alternative splicing regulation. authors partitioned D. melanogaster cells two different conditions: observations condition = treated treated dsRNAs knockdown expression via RNAi, condition = untreated left alone control. Additionally, two sets duplicates processed parallel condition different kits used library preparation (producing single-read vs paired-end reads). Thus, suitable definition “batch” might interaction type condition. However, easy double-check making batch definition granular possible (sample denotes batch). metadata object contains information experimental design: Evidently, one sample thrown away! absence batch-effects interested effects condition, design_formula :","code":"print(metadata) #>       obs_id condition        type                  id_1       id_2 #> 1   treated1   treated single-read   single-read:treated   treated1 #> 2   treated2   treated  paired-end    paired-end:treated   treated2 #> 3   treated3   treated  paired-end    paired-end:treated   treated3 #> 4 untreated1 untreated single-read single-read:untreated untreated1 #> 5 untreated2 untreated single-read single-read:untreated untreated2 #> 6 untreated3 untreated  paired-end  paired-end:untreated untreated3 #> 7 untreated4 untreated  paired-end  paired-end:untreated untreated4 design_formula <- ~ condition"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"estimating-size-factors","dir":"Articles","previous_headings":"An example with DESeq2","what":"Estimating size factors","title":"An introduction to disize","text":"","code":"# First batch definition size_factors_1 <- disize::disize(     design_formula,     counts,     metadata,     batch_name = \"id_1\",     obs_name = \"obs_id\" # needed to order 'counts' correctly ) #> Formatting data... #> ar: creating stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_nvecserial.a #> ar: creating stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_cvodes.a #> ar: creating stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_idas.a #> ar: creating stan/lib/stan_math/lib/sundials_6.1.1/lib/libsundials_kinsol.a #> /home/runner/.cmdstan/cmdstan-2.36.0/stan/lib/stan_math/lib/tbb_2020.3/build/Makefile.tbb:28: CONFIG: cfg=release arch=intel64 compiler=gcc target=linux runtime=cc13.3.0_libc2.39_kernel6.11.0 #> In file included from ../tbb_2020.3/src/tbb/concurrent_hash_map.cpp:17: #> ../tbb_2020.3/include/tbb/concurrent_hash_map.h:347:23: warning: ‘template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator’ is deprecated [-Wdeprecated-declarations] #>   347 |         : public std::iterator<std::forward_iterator_tag,Value> #>       |                       ^~~~~~~~ #> In file included from /usr/include/c++/13/bits/stl_construct.h:61, #>                  from /usr/include/c++/13/bits/stl_tempbuf.h:61, #>                  from /usr/include/c++/13/memory:66, #>                  from ../tbb_2020.3/include/tbb/tbb_stddef.h:452, #>                  from ../tbb_2020.3/include/tbb/concurrent_hash_map.h:23: #> /usr/include/c++/13/bits/stl_iterator_base_types.h:127:34: note: declared here #>   127 |     struct _GLIBCXX17_DEPRECATED iterator #>       |                                  ^~~~~~~~ #> cc1plus: note: unrecognized command-line option ‘-Wno-unknown-warning-option’ may have been intended to silence earlier diagnostics #> In file included from ../tbb_2020.3/src/tbb/concurrent_queue.cpp:22: #> ../tbb_2020.3/include/tbb/internal/_concurrent_queue_impl.h:749:21: warning: ‘template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator’ is deprecated [-Wdeprecated-declarations] #>   749 |         public std::iterator<std::forward_iterator_tag,Value> { #>       |                     ^~~~~~~~ #> In file included from /usr/include/c++/13/bits/stl_construct.h:61, #>                  from /usr/include/c++/13/bits/stl_tempbuf.h:61, #>                  from /usr/include/c++/13/memory:66, #>                  from ../tbb_2020.3/include/tbb/tbb_stddef.h:452, #>                  from ../tbb_2020.3/src/tbb/concurrent_queue.cpp:17: #> /usr/include/c++/13/bits/stl_iterator_base_types.h:127:34: note: declared here #>   127 |     struct _GLIBCXX17_DEPRECATED iterator #>       |                                  ^~~~~~~~ #> ../tbb_2020.3/include/tbb/internal/_concurrent_queue_impl.h:1013:21: warning: ‘template<class _Category, class _Tp, class _Distance, class _Pointer, class _Reference> struct std::iterator’ is deprecated [-Wdeprecated-declarations] #>  1013 |         public std::iterator<std::forward_iterator_tag,Value> { #>       |                     ^~~~~~~~ #> /usr/include/c++/13/bits/stl_iterator_base_types.h:127:34: note: declared here #>   127 |     struct _GLIBCXX17_DEPRECATED iterator #>       |                                  ^~~~~~~~ #> cc1plus: note: unrecognized command-line option ‘-Wno-unknown-warning-option’ may have been intended to silence earlier diagnostics #> Estimating size factors... (Max ETA: ~69.5s) #> Finised in 65.3s!  # Second batch definition size_factors_2 <- disize::disize(     design_formula,     counts,     metadata,     batch_name = \"id_2\",     obs_name = \"obs_id\" ) #> Formatting data... #> Estimating size factors... (Max ETA: ~71.2s) #> Finised in 66.2s!"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"comparing-batch-definitions","dir":"Articles","previous_headings":"An example with DESeq2 > Estimating size factors","what":"Comparing batch definitions","title":"An introduction to disize","text":"Although similarities, enough difference observations using granular definition may bring needed precision.","code":"size_factors <- data.frame(     obs_id = metadata$obs_id,     def_1 = unname(size_factors_1[metadata$id_1]),     def_2 = unname(size_factors_2[metadata$id_2]) )  print(size_factors) #>       obs_id      def_1       def_2 #> 1   treated1  0.3644843  0.43631978 #> 2   treated2 -0.3352496 -0.35234481 #> 3   treated3 -0.3352496 -0.26508936 #> 4 untreated1  0.2146778  0.04038452 #> 5 untreated2  0.2146778  0.50201070 #> 6 untreated3 -0.5015247 -0.51135082 #> 7 untreated4 -0.5015247 -0.37122919"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"running-deseq","dir":"Articles","previous_headings":"An example with DESeq2","what":"Running DESeq","title":"An introduction to disize","text":"size factors inserted DESeqDataSet object, analysis proceeds normally.","code":"# Constructing DESeqDataSet object dds <- DESeq2::DESeqDataSetFromMatrix(     countData = t(counts[metadata$obs_id, ]),     colData = metadata,     design = design_formula ) DESeq2::sizeFactors(dds) <- exp(size_factors_2) # Insert size factors  # Run analysis dds <- DESeq2::DESeq(dds) #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing  # Print results print(results(dds)) #> log2 fold change (MLE): condition untreated vs treated  #> Wald test p-value: condition untreated vs treated  #> DataFrame with 14599 rows and 6 columns #>                baseMean log2FoldChange     lfcSE       stat    pvalue      padj #>               <numeric>      <numeric> <numeric>  <numeric> <numeric> <numeric> #> FBgn0000003    0.186221     -1.0187129  3.804306 -0.2677789  0.788869        NA #> FBgn0000008  102.990024      0.0150085  0.221888  0.0676399  0.946072  0.991046 #> FBgn0000014    1.141865      0.5309724  2.111610  0.2514539  0.801463        NA #> FBgn0000015    0.917658      1.8985689  2.063367  0.9201314  0.357504        NA #> FBgn0000017 4712.828739      0.2559958  0.126122  2.0297401  0.042383  0.235628 #> ...                 ...            ...       ...        ...       ...       ... #> FBgn0261571 9.23444e-02    -0.87883551  3.809415 -0.2307009  0.817547        NA #> FBgn0261572 6.71833e+00     0.97764581  0.764074  1.2795174  0.200715  0.582481 #> FBgn0261573 2.42636e+03     0.00339833  0.116665  0.0291290  0.976762  0.996551 #> FBgn0261574 5.25210e+03     0.00556288  0.189909  0.0292923  0.976631  0.996551 #> FBgn0261575 1.14987e+01    -0.13395381  0.925003 -0.1448145  0.884857  0.974605"},{"path":"https://toddmccready.github.io/disize/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Todd McCready. Author, maintainer.","code":""},{"path":"https://toddmccready.github.io/disize/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCready T (2025). disize: Design Informed Size Factor Estimation. R package version 0.4.21, https://toddmccready.github.io/disize/.","code":"@Manual{,   title = {disize: Design Informed Size Factor Estimation},   author = {Todd McCready},   year = {2025},   note = {R package version 0.4.21},   url = {https://toddmccready.github.io/disize/}, }"},{"path":"https://toddmccready.github.io/disize/index.html","id":"disize","dir":"","previous_headings":"","what":"Design Informed Size Factor Estimation","title":"Design Informed Size Factor Estimation","text":"Design informed size factor estimation (disize) normalization method meant alternative DESeq2’s median rations edgeR’s trimmed mean M values","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design Informed Size Factor Estimation","text":"disize yet CRAN, installation one-liner install.packages:","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-remotes","dir":"","previous_headings":"","what":"With remotes","title":"Design Informed Size Factor Estimation","text":"","code":"# Install disize remotes::install_github(\"https://github.com/toddmccready/disize\")  # Set up CmdStan toolchain cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-rv","dir":"","previous_headings":"","what":"With rv","title":"Design Informed Size Factor Estimation","text":"Add following entries rproject.toml file(already present): sync project: finally install CmdStan toolchain R:","code":"repositories = [     # ...     { alias = \"STAN\", url = \"https://stan-dev.r-universe.dev\" },     # ... ]  # ...  dependencies = [     # ...     { name = \"disize\", git = \"https://github.com/toddmccready/disize\", tag = \"v0.4.21\" },     # ... ] rv sync cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/index.html","id":"implementation","dir":"","previous_headings":"","what":"Implementation","title":"Design Informed Size Factor Estimation","text":"Internally, disize uses Stan fit Bayesian model jointly estimates effect covariates(structured according design_formula) expression confounding batch-effects: \\begin{aligned}     \\mathbf{y}_g &\\sim \\text{NegBinom}(\\mathbf{\\mu}_g, \\phi) \\\\     \\log \\mathbf{\\mu}_g &= \\mathbf{\\alpha}_g + \\mathbf{X} \\mathbf{\\beta}_g + \\mathbf{Z}\\mathbf{b}_g + \\mathbf{o} \\\\         &= \\mathbf{\\alpha}_g + \\mathbf{X} \\mathbf{\\beta}_g + \\mathbf{Z}\\mathbf{b}_g + (\\mathbf{B} \\mathbf{s}) \\\\     \\mathbf{b}_g &\\sim \\text{Normal}(\\mathbf{0}, \\mathbf{G}) \\end{aligned} \\mathbf{y}_g denotes vector counts gene g observations, realized distribution parameterized effect covariates (\\mathbf{\\alpha} + \\mathbf{X} \\mathbf{\\beta}_g + \\mathbf{Z}\\mathbf{b}_g) batch-effects (\\mathbf{B} \\mathbf{s}). experimental design specified R formula (design_formula) constructs “fixed-effects” model matrix \\mathbf{X} (without intercept) “random-effects” model matrix \\mathbf{Z}; regular GLMM. confounding batch-effect essentially unknown offset \\mathbf{o} = \\mathbf{B} \\mathbf{s}, \\mathbf{B} specifies batch membership observation \\mathbf{s} contains “size factors” scale true magnitude expression. face, however, model identifiable experimental designs (often batch ID perfectly collinear predictor interaction predictors). identifiability issue overcome assuming fraction features significantly affected covariates measured experiment; words, estimated coefficients \\mathbf{\\beta}_g, \\mathbf{b}_g (excluding intercept) sparse across genes. assumption encoded final model placing distinct horseshoe priors model coefficients (fixed- random-effects). allows priors learned independently using large number features measured RNAseq experiments.","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":null,"dir":"Reference","previous_headings":"","what":"Design-informed size factor estimation — disize","title":"Design-informed size factor estimation — disize","text":"Design-informed size factor estimation","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design-informed size factor estimation — disize","text":"","code":"disize(   design_formula,   counts,   metadata,   batch_name = \"batch_id\",   obs_name = \"obs_id\",   n_feats = min(10000L, ncol(counts)),   n_subset = 50L,   n_iters = \"auto\",   n_threads = max(1, parallel::detectCores() - 2L),   grainsize = ceiling(n_feats/n_threads),   init_alpha = 1e-06,   verbose = 3L )"},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Design-informed size factor estimation — disize","text":"design_formula formula describing experimental design. counts (obsservation x feature) count matrix. metadata dataframe containing sample metadata. batch_name identifier batch column 'metadata', defaults \"batch_id\". obs_name identifier observation column 'metadata', defaults \"obs_id\". n_feats number features used estimation, defaults automatically choosing based heuristic. n_subset number observations per experimental unit used estimation, defaults 50. n_iters number iterations used single optimization pass. n_threads number threads use parallel processing. grainsize grainsize used partitioning data across threads ( highly encouraged leave default value). verbose verbosity level (1: errors, 2: also allows warnings, 3: also allows messages, 4: also prints additional output useful debugging).","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design-informed size factor estimation — disize","text":"named numeric vector containing size factor point estimates.","code":""}]

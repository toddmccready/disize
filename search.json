[{"path":"https://toddmccready.github.io/disize/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 disize authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://toddmccready.github.io/disize/articles/comparing-defs.html","id":"reading-in-data","dir":"Articles","previous_headings":"","what":"Reading in data","title":"Comparing batch definitions","text":"","code":"# Grab filepaths counts_path <- system.file(     \"extdata\",     \"pasilla_gene_counts.tsv\",     package=\"pasilla\",     mustWork=TRUE ) metadata_path <- system.file(     \"extdata\",     \"pasilla_sample_annotation.csv\",     package=\"pasilla\",     mustWork=TRUE )  # Read in data counts <- as.matrix(read.csv(counts_path, sep = \"\\t\", row.names = \"gene_id\")) |>     t()  metadata <- read.csv(metadata_path) metadata <- metadata |>     dplyr::mutate(sample_id = sub(\"fb\", \"\", file)) |>     dplyr::select(sample_id, condition, type) |>     dplyr::mutate(dplyr::across(c(condition, type), as.factor))"},{"path":"https://toddmccready.github.io/disize/articles/comparing-defs.html","id":"inspecting-the-study-design","dir":"Articles","previous_headings":"","what":"Inspecting the study design","title":"Comparing batch definitions","text":"dataset derived study investigating effect various RNA binding proteins (RBPs) alternative splicing regulation. authors partitioned D. melanogaster cells two different conditions: samples condition = treated treated dsRNAs knockdown expression via RNAi, condition = untreated left alone control. Additionally, two sets duplicates processed condition different technologies used sequencing (single-read vs paired-end). Therefore, suitable definition “batch” might grouping duplicates together: However, granular definition allow batch-effects even within duplicates (result differences sample processing): (Evidently one sample thrown away, although pose problem anything downstream.)","code":"metadata <- metadata |>     dplyr::mutate(id_1 = interaction(type, condition, sep = \":\")) metadata <- metadata |>     dplyr::mutate(id_2 = sample_id)  print(metadata) #>    sample_id condition        type                  id_1       id_2 #> 1   treated1   treated single-read   single-read:treated   treated1 #> 2   treated2   treated  paired-end    paired-end:treated   treated2 #> 3   treated3   treated  paired-end    paired-end:treated   treated3 #> 4 untreated1 untreated single-read single-read:untreated untreated1 #> 5 untreated2 untreated single-read single-read:untreated untreated2 #> 6 untreated3 untreated  paired-end  paired-end:untreated untreated3 #> 7 untreated4 untreated  paired-end  paired-end:untreated untreated4"},{"path":"https://toddmccready.github.io/disize/articles/comparing-defs.html","id":"estimating-size-factors","dir":"Articles","previous_headings":"","what":"Estimating size factors","title":"Comparing batch definitions","text":"absence batch-effects interested effects condition, design_formula : required arguments can now run disize batch definitions:","code":"design_formula <- ~ condition size_factors_1 <- disize::disize(     design_formula,     counts,     metadata,     batch_name = \"id_1\",     obs_name = \"sample_id\" # needed to order 'counts' correctly ) #> Formatting data... #> Estimating size factors... (Max ETA: ~66.8s) #> Finised in 60.1s!  size_factors_2 <- disize::disize(     design_formula,     counts,     metadata,     batch_name = \"id_2\",     obs_name = \"sample_id\" ) #> Formatting data... #> Estimating size factors... (Max ETA: ~71.3s) #> Finised in 61.5s!"},{"path":"https://toddmccready.github.io/disize/articles/comparing-defs.html","id":"comparing-definitions","dir":"Articles","previous_headings":"","what":"Comparing definitions","title":"Comparing batch definitions","text":"Although similarities (e.g., estimates untreated3 approximately equal), enough differences samples granular definition better choice analysis.","code":"size_factors <- data.frame(     sample_id = metadata$sample_id,     id_1 = unname(size_factors_1[metadata$id_1]),     id_2 = unname(size_factors_2[metadata$id_2]) )  print(size_factors) #>    sample_id       id_1       id_2 #> 1   treated1  0.3576840  0.4337995 #> 2   treated2 -0.3341442 -0.3501711 #> 3   treated3 -0.3341442 -0.2633270 #> 4 untreated1  0.2187259  0.0424296 #> 5 untreated2  0.2187259  0.5012903 #> 6 untreated3 -0.4950414 -0.5118620 #> 7 untreated4 -0.4950414 -0.3706849"},{"path":"https://toddmccready.github.io/disize/articles/comparing-defs.html","id":"running-deseq","dir":"Articles","previous_headings":"","what":"Running DESeq","title":"Comparing batch definitions","text":"size factors inserted DESeqDataSet object, analysis proceeds normally.","code":"# Constructing DESeqDataSet object dds <- DESeq2::DESeqDataSetFromMatrix(     countData = t(counts[metadata$sample_id, ]),     colData = metadata,     design = design_formula ) DESeq2::sizeFactors(dds) <- exp(size_factors_2) # Insert size factors  # Run analysis dds <- DESeq2::DESeq(dds) #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing  # Print results print(DESeq2::results(dds)) #> log2 fold change (MLE): condition untreated vs treated  #> Wald test p-value: condition untreated vs treated  #> DataFrame with 14599 rows and 6 columns #>                baseMean log2FoldChange     lfcSE       stat    pvalue      padj #>               <numeric>      <numeric> <numeric>  <numeric> <numeric> <numeric> #> FBgn0000003    0.185893     -1.0167939  3.804518 -0.2672596 0.7892693        NA #> FBgn0000008  102.946483      0.0152384  0.221325  0.0688507 0.9451085  0.990455 #> FBgn0000014    1.141458      0.5268319  2.114015  0.2492092 0.8031990        NA #> FBgn0000015    0.917912      1.8982548  2.060040  0.9214650 0.3568077        NA #> FBgn0000017 4711.140900      0.2564267  0.126126  2.0330989 0.0420425  0.234177 #> ...                 ...            ...       ...        ...       ...       ... #> FBgn0261571 9.25775e-02    -0.87944028  3.809549 -0.2308515  0.817430        NA #> FBgn0261572 6.71659e+00     0.97726858  0.762876  1.2810322  0.200182  0.579617 #> FBgn0261573 2.42519e+03     0.00375871  0.115481  0.0325484  0.974035  0.995694 #> FBgn0261574 5.25085e+03     0.00508216  0.190924  0.0266188  0.978764  0.997642 #> FBgn0261575 1.15072e+01    -0.13557712  0.928857 -0.1459612  0.883952  0.973689"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"an-example-with-deseq2","dir":"Articles","previous_headings":"","what":"An example with DESeq2","title":"An introduction to disize","text":"see disize action, analyzing following dataset Li et al., 2025 DESeq2. dataset consists purified macrophage subtype(“Mac2”, induced ‘activated’ state) partitioned four groups exposed different conditions. authors offer information samples processed: sorted Mac2 cells divided four groups stimulated 3-h time point concentrations previously described. , RNA extracted using RNeasy Plus Micro Kit per manufacturer instructions. Poly()mRNA isolated using mRNA Capture Beads 2.0 (Yeasen Cat.12629ES, CHN) two rounds purification, followed RNA fragmentation magnesium ions 94°C (Yeasen Cat.12340ES97, CHN). RNA sequencing library preparation performed using TruSeq RNA Library Prep Kit v2 (Illumina). Sequencing carried paired-end 2×150 bp (PE150) Illumina Novaseq™ X Plus (LC-Bio Technologies). TruSeq RNA Library Prep Kit involves “tagging” transcripts barcodes identify distinct samples, allowing prepared cDNA libraries pooled together sequencing. Since batch-effects usually attributed separate sequencing runs, expect small batch-effects present dataset define “batch” unit subjected RNA extraction(processing).","code":""},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"dependencies","dir":"Articles","previous_headings":"An example with DESeq2","what":"Dependencies","title":"An introduction to disize","text":"","code":"suppressPackageStartupMessages({     library(disize)     library(curl)     library(R.utils)     library(data.table) })"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"downloading-the-data","dir":"Articles","previous_headings":"An example with DESeq2","what":"Downloading the data","title":"An introduction to disize","text":"","code":"## Download counts and construct metadata counts_path <- curl::curl_download(     url = \"https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE273924&format=file&file=GSE273924%5Fraw%5Fcounts%2Etsv%2Egz\",     destfile = paste0(tempdir(), \"/counts.tsv.gz\") ) counts <- data.table::fread(counts_path)  metadata <- data.frame(     \"sample_id\" = c(colnames(counts)[-1]),     \"condition\" = factor(rep(c(\"control\", \"lps\", \"nelps\", \"ne\"), each = 3)) )  # Coerce to formatted matrix gene_names <- counts$gene_id counts <- t(as.matrix(counts[,-1])) colnames(counts) <- gene_names"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"running-disize","dir":"Articles","previous_headings":"An example with DESeq2","what":"Running disize","title":"An introduction to disize","text":"metadata contains information experimental design: dataset, study primarily interested effect condition expression, thus formula input disize : can finally run disize get estimated size factors: Evidently batch-effect indeed small across samples! samples “NELPS1” “NELPS2” seem processed slightly worse, otherwise estimated size factors approximately (within ~0.1). can confirm estimates rerunning disize larger n_feats: Indeed estimates remain largely .","code":"print(metadata) #>    sample_id condition #> 1      Ctrl1   control #> 2      Ctrl2   control #> 3      Ctrl3   control #> 4       LPS1       lps #> 5       LPS2       lps #> 6       LPS3       lps #> 7     NELPS1     nelps #> 8     NELPS2     nelps #> 9     NELPS3     nelps #> 10       NE1        ne #> 11       NE2        ne #> 12       NE3        ne design_formula <- ~ condition size_factors_1 <- disize::disize(     design_formula,     counts,     metadata,     batch_name = \"sample_id\" ) #> Formatting data... #> Estimating size factors... (Max ETA: ~113.7s) #> Finised in 96.3s! print(size_factors_1) #>        Ctrl1        Ctrl2        Ctrl3         LPS1         LPS2         LPS3  #>  0.082340728  0.003553523 -0.086471855  0.085881138  0.012432106  0.100065963  #>          NE1          NE2          NE3       NELPS1       NELPS2       NELPS3  #> -0.069011169  0.036273935  0.106796358 -0.162830180 -0.134203900 -0.021313770 size_factors_2 <- disize::disize(     design_formula,     counts,     metadata,     batch_name = \"sample_id\",     n_feats = 15000 ) #> Formatting data... #> Estimating size factors... (Max ETA: ~160.6s) #> Finised in 139.3s! print(size_factors_2) #>        Ctrl1        Ctrl2        Ctrl3         LPS1         LPS2         LPS3  #>  0.095303742  0.005168706 -0.083965484  0.073874335 -0.008215053  0.087963097  #>          NE1          NE2          NE3       NELPS1       NELPS2       NELPS3  #> -0.044352619  0.055490226  0.123255579 -0.181307332 -0.149171063 -0.025856786"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"running-deseq","dir":"Articles","previous_headings":"An example with DESeq2","what":"Running DESeq","title":"An introduction to disize","text":"size factors inserted DESeqDataSet object, analysis proceeds normally.","code":"# Constructing DESeqDataSet object dds <- DESeq2::DESeqDataSetFromMatrix(     countData = t(counts),     colData = metadata,     design = design_formula ) DESeq2::sizeFactors(dds) <- exp(size_factors_2) # Insert size factors  # Run analysis dds <- DESeq2::DESeq(dds) #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing  # Print results print(DESeq2::results(dds)) #> log2 fold change (MLE): condition nelps vs control  #> Wald test p-value: condition nelps vs control  #> DataFrame with 57132 rows and 6 columns #>                       baseMean log2FoldChange     lfcSE       stat      pvalue #>                      <numeric>      <numeric> <numeric>  <numeric>   <numeric> #> ENSMUSG00000028180 1.94379e+03     -0.8031370 0.0948941 -8.4635057 2.59458e-17 #> ENSMUSG00000028182 2.82072e+01     -0.9036829 0.5053360 -1.7882814 7.37306e-02 #> ENSMUSG00000028185 3.36083e-01     -0.0567436 4.4073563 -0.0128748 9.89728e-01 #> ENSMUSG00000028184 1.03770e+04      0.7491799 0.0647543 11.5695750 5.87731e-31 #> ENSMUSG00000028187 9.79971e+02     -0.1955160 0.1124985 -1.7379436 8.22207e-02 #> ...                        ...            ...       ...        ...         ... #> ENSMUSG00000106108    10.66611      6.7370233 1.4341914   4.697437 2.63447e-06 #> ENSMUSG00000042675  1583.23329     -0.0525418 0.0782159  -0.671753 5.01741e-01 #> ENSMUSG00000036959  1428.91454      0.5311799 0.0834599   6.364493 1.95936e-10 #> ENSMUSG00000036958     0.66323     -3.9148515 4.2776350  -0.915191 3.60092e-01 #> ENSMUSG00000042678     5.59561     -5.6136803 1.7045407  -3.293368 9.89947e-04 #>                           padj #>                      <numeric> #> ENSMUSG00000028180 2.37920e-16 #> ENSMUSG00000028182 1.43474e-01 #> ENSMUSG00000028185          NA #> ENSMUSG00000028184 9.03694e-30 #> ENSMUSG00000028187 1.57786e-01 #> ...                        ... #> ENSMUSG00000106108 1.05146e-05 #> ENSMUSG00000042675 6.53594e-01 #> ENSMUSG00000036959 1.14561e-09 #> ENSMUSG00000036958          NA #> ENSMUSG00000042678 2.84207e-03"},{"path":"https://toddmccready.github.io/disize/articles/implementation.html","id":"estimation","dir":"Articles","previous_headings":"","what":"Estimation","title":"Implementation of disize","text":"Since posterior distribution \\mathbf{s} heavily concentrated typical datasets thousands features, sufficient quickly provide point estimate \\mathbf{s} delegate estimation model coefficients existing tools like DESeq2 edgeR (replacing small normalization step workflows). disize uses Stan’s L-BFGS optimization algorithm find model’s maximum posteriori (MAP) \\mathbf{s}. end fewer iterations needed parameters converge using heuristic guess long procedure run ; followed diagnostic ensure size factors converged.","code":""},{"path":"https://toddmccready.github.io/disize/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Todd McCready. Author, maintainer.","code":""},{"path":"https://toddmccready.github.io/disize/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCready T (2025). disize: Design Informed Size Factor Estimation. R package version 0.4.28, https://toddmccready.github.io/disize/.","code":"@Manual{,   title = {disize: Design Informed Size Factor Estimation},   author = {Todd McCready},   year = {2025},   note = {R package version 0.4.28},   url = {https://toddmccready.github.io/disize/}, }"},{"path":"https://toddmccready.github.io/disize/index.html","id":"disize","dir":"","previous_headings":"","what":"Design Informed Size Factor Estimation","title":"Design Informed Size Factor Estimation","text":"Design informed size factor estimation (disize) normalization method meant alternative DESeq2’s median rations edgeR’s trimmed mean M values","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Design Informed Size Factor Estimation","text":"Take look Get started page familiarize disize.","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design Informed Size Factor Estimation","text":"disize yet CRAN, installation one-liner install.packages:","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-remotes","dir":"","previous_headings":"","what":"With remotes","title":"Design Informed Size Factor Estimation","text":"","code":"# Install disize remotes::install_github(\"https://github.com/toddmccready/disize\")  # Set up CmdStan toolchain cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-rv","dir":"","previous_headings":"","what":"With rv","title":"Design Informed Size Factor Estimation","text":"Add following entries rproject.toml file(already present): install CmdStan toolchain R:","code":"repositories = [     # ...     { alias = \"STAN\", url = \"https://stan-dev.r-universe.dev\" },     # ... ]  # ...  dependencies = [     # ...     { name = \"disize\", git = \"https://github.com/toddmccready/disize\", tag = \"v0.4.28\" },     # ... ] cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":null,"dir":"Reference","previous_headings":"","what":"Design-informed size factor estimation — disize","title":"Design-informed size factor estimation — disize","text":"Design-informed size factor estimation","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design-informed size factor estimation — disize","text":"","code":"disize(   design_formula,   counts,   metadata,   batch_name,   obs_name = \"obs_id\",   n_feats = 10000L,   n_subset = 50L,   n_iters = \"auto\",   n_threads = max(1, ceiling(parallel::detectCores()/2)),   init_alpha = 1e-06,   verbose = 3L )"},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Design-informed size factor estimation — disize","text":"design_formula formula describing experimental design. counts (observation x feature) count matrix. metadata dataframe containing observation-level metadata. batch_name identifier batch column 'metadata'. obs_name identifier observation column 'metadata', defaults \"obs_id\". n_feats number features used estimation, defaults features (default caps 10000). n_subset number observations per experimental unit used estimation, defaults 50 (useful scRNA-seq experiments). n_iters number iterations used estimation. n_threads number threads use parallel processing. verbose verbosity level (1: errors, 2: also allows warnings, 3: also allows messages, 4: also prints additional output useful debugging). grainsize grainsize used partitioning data across threads (highly encouraged leave default value).","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design-informed size factor estimation — disize","text":"named numeric vector containing size factor estimates.","code":""}]

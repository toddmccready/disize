[{"path":"https://toddmccready.github.io/disize/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 disize authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://toddmccready.github.io/disize/articles/a-bulk-experiment.html","id":"dependencies","dir":"Articles","previous_headings":"","what":"Dependencies","title":"A Bulk Experiment","text":"","code":"library(disize) library(curl) #> Using libcurl 8.5.0 with OpenSSL/3.0.13 library(R.utils) #> Loading required package: R.oo #> Loading required package: R.methodsS3 #> R.methodsS3 v1.8.2 (2022-06-13 22:00:14 UTC) successfully loaded. See ?R.methodsS3 for help. #> R.oo v1.27.1 (2025-05-02 21:00:05 UTC) successfully loaded. See ?R.oo for help. #>  #> Attaching package: 'R.oo' #> The following object is masked from 'package:R.methodsS3': #>  #>     throw #> The following objects are masked from 'package:methods': #>  #>     getClasses, getMethods #> The following objects are masked from 'package:base': #>  #>     attach, detach, load, save #> R.utils v2.13.0 (2025-02-24 21:20:02 UTC) successfully loaded. See ?R.utils for help. #>  #> Attaching package: 'R.utils' #> The following object is masked from 'package:utils': #>  #>     timestamp #> The following objects are masked from 'package:base': #>  #>     cat, commandArgs, getOption, isOpen, nullfile, parse, use, warnings library(data.table)"},{"path":"https://toddmccready.github.io/disize/articles/a-bulk-experiment.html","id":"the-dataset","dir":"Articles","previous_headings":"","what":"The Dataset","title":"A Bulk Experiment","text":"dataset consists purified macrophage subtype(“Mac2”, supposedly ‘activated’ state) partitioned four groups exposed different conditions. authors offer information samples processed: sorted Mac2 cells divided four groups stimulated 3-h time point concentrations previously described. , RNA extracted using RNeasy Plus Micro Kit per manufacturer instructions. Poly()mRNA isolated using mRNA Capture Beads 2.0 (Yeasen Cat.12629ES, CHN) two rounds purification, followed RNA fragmentation magnesium ions 94°C (Yeasen Cat.12340ES97, CHN). RNA sequencing library preparation performed using TruSeq RNA Library Prep Kit v2 (Illumina). Sequencing carried paired-end 2×150 bp (PE150) Illumina Novaseq™ X Plus (LC-Bio Technologies). TruSeq RNA Library Prep Kit involves “tagging” transcripts barcodes identify distinct samples, allowing prepared cDNA libraries pooled together sequencing. Since batch-effects usually attributed separate sequencing runs, expect small batch-effects present dataset (even though sample preparation done prior pooling). Let us test hypothesis:","code":""},{"path":"https://toddmccready.github.io/disize/articles/a-bulk-experiment.html","id":"downloading-the-data","dir":"Articles","previous_headings":"","what":"Downloading The Data","title":"A Bulk Experiment","text":"","code":"# Download counts and construct metadata counts_path <- curl::curl_download(     url = \"https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE273924&format=file&file=GSE273924%5Fraw%5Fcounts%2Etsv%2Egz\",     destfile = paste0(tempdir(), \"/counts.tsv.gz\") ) counts <- data.table::fread(counts_path)  metadata <- data.frame(     \"sample_id\" = c(colnames(counts)[-1]),     \"condition\" = factor(rep(c(\"control\", \"lps\", \"nelps\", \"ne\"), each = 3)),     \"batch_id\" = factor(rep(c(\"batch-1\", \"batch-2\", \"batch-3\", \"batch-4\"), each = 3)) )  # Coerce to formatted matrix gene_names <- counts$gene_id counts <- t(as.matrix(counts[,-1])) colnames(counts) <- gene_names"},{"path":"https://toddmccready.github.io/disize/articles/a-bulk-experiment.html","id":"running-disize","dir":"Articles","previous_headings":"","what":"Running disize","title":"A Bulk Experiment","text":"metadata contains information experimental design: dataset, study primarily interested effect condition expression, thus formula input disize : can finally run disize get estimated size factors: Evidently batch-effect indeed small! can confirm estimates rerunning disize larger n_feats: estimates remain largely , though seems batch-3 processed slightly worse.","code":"``` r print(metadata) #>    sample_id condition batch_id #> 1      Ctrl1   control  batch-1 #> 2      Ctrl2   control  batch-1 #> 3      Ctrl3   control  batch-1 #> 4       LPS1       lps  batch-2 #> 5       LPS2       lps  batch-2 #> 6       LPS3       lps  batch-2 #> 7     NELPS1     nelps  batch-3 #> 8     NELPS2     nelps  batch-3 #> 9     NELPS3     nelps  batch-3 #> 10       NE1        ne  batch-4 #> 11       NE2        ne  batch-4 #> 12       NE3        ne  batch-4 design_formula <- ~ condition (size_factors <- disize(design_formula, counts, metadata)) #> Formatting data... #> Estimating size factors... (Max ETA: 354.1s) #>      batch-1      batch-2      batch-3      batch-4  #>  0.001140953  0.067954315 -0.103982691  0.026935061 (size_factors_2 <- disize(design_formula, counts, metadata, n_feats = 15000)) #> Formatting data... #> Estimating size factors... (Max ETA: 542.4s) #>     batch-1     batch-2     batch-3     batch-4  #>  0.01962999  0.04879726 -0.13295696  0.05322399"},{"path":"https://toddmccready.github.io/disize/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Todd McCready. Author, maintainer.","code":""},{"path":"https://toddmccready.github.io/disize/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCready T (2025). disize: Design Informed Size Factor Estimation. R package version 0.4.5, https://toddmccready.github.io/disize/.","code":"@Manual{,   title = {disize: Design Informed Size Factor Estimation},   author = {Todd McCready},   year = {2025},   note = {R package version 0.4.5},   url = {https://toddmccready.github.io/disize/}, }"},{"path":"https://toddmccready.github.io/disize/index.html","id":"disize-a-tool-for-size-factor-estimation","dir":"","previous_headings":"","what":"Design Informed Size Factor Estimation","title":"Design Informed Size Factor Estimation","text":"Leverage information experimental design size factor estimation.","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design Informed Size Factor Estimation","text":"disize yet CRAN, installation one-liner install.packages:","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-remotes","dir":"","previous_headings":"","what":"With remotes","title":"Design Informed Size Factor Estimation","text":"","code":"# Install disize remotes::install_github(\"https://github.com/toddmccready/disize\")  # Set up CmdStan toolchain cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-rv","dir":"","previous_headings":"","what":"With rv","title":"Design Informed Size Factor Estimation","text":"Add following entries rproject.toml file(already present): sync lockfile: finally install CmdStan toolchain R:","code":"repositories = [     # ...     { alias = \"STAN\", url = \"https://stan-dev.r-universe.dev\" },     # ... ]  # ...  dependencies = [     # ...     { name = \"disize\", git = \"https://github.com/toddmccready/disize\", tag = \"v0.4.5\" },     # ... ] rv sync cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Design Informed Size Factor Estimation","text":"export disize::disize! required arguments : design_formula: R formula specifies experimental design. R formula pass something like DESeq2 edgeR including predictors like condition, sex, etc estimate expression quantities interest(except allow random-effects). terms used formula present metadata. counts: (observation x features) matrix containing transcript counts. can dense sparse; internal coercion dense matrix done subsetting relevant features. metadata: dataframe containing sample-level information(observations rows). batch- observation identifiers specified batch_name obs_name, respectively. Ensure batch identifier specified column metadata, however obs_name required row indices counts metadata correspond sample(.e., either rownames(counts) metadata[[obs_name]] NULL row indices counts metadata assumed correspond sample).","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Design Informed Size Factor Estimation","text":"","code":"> dim(counts) [1] 900 500  > metadata # A tibble: 900 × 4    obs_id batch_id donor cell_type    <fct>  <fct>    <fct> <fct>  1 1      1        1     1  2 2      1        1     2  3 3      1        1     3  4 4      1        1     1  5 5      1        1     2  6 6      1        1     3  7 7      1        1     1  8 8      1        1     2  9 9      1        1     3 10 10     1        1     1 # ℹ 890 more rows # ℹ Use `print(n = ...)` to see more rows  > (size_factors <- disize( +     design_formula = ~ cell_type + (1 | cell_type:donor), +     counts = counts, +     metadata = metadata + ))             1             2             3             4             5            6  0.0020845603  0.0013157564 -0.0025107518 -0.0025500306  0.0006061994  0.0010440993"},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":null,"dir":"Reference","previous_headings":"","what":"Design-infored size factor estimation. — disize","title":"Design-infored size factor estimation. — disize","text":"Design-infored size factor estimation.","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design-infored size factor estimation. — disize","text":"","code":"disize(   design_formula,   counts = NULL,   metadata = NULL,   batch_name = \"batch_id\",   obs_name = \"obs_id\",   feat_name = \"feat_id\",   n_feats = 1000,   n_subset = 50,   verbose = 3,   n_passes = 20,   n_iters = 100,   tolerance = 0.001 )"},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Design-infored size factor estimation. — disize","text":"design_formula formula describing experimental design. counts (obsservation x feature) count matrix. metadata dataframe containing sample metadata. batch_name identifier batch column 'metadata', defaults \"batch_id\". obs_name identifier observation column 'metadata', defaults \"obs_id\". feat_name identifier feature column 'metadata', defaults \"feat_id\". n_feats number genes used estimation, defaults 500. Increasing value result function taking longer confidence size factors. n_subset number observations per experimental unit used estimation, defaults 50. verbose verbosity level. n_passes number optimization passes go . n_iters number iterations used single optimization pass. tolerance tolerance used evaluate convergence size factors. model_data model data already constructed. Must contain 'batch_name' \"feat_idx\" identifiers columns, predictors used 'design_formula'.","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design-infored size factor estimation. — disize","text":"named numeric vector containing size factor point estimates.","code":""},{"path":"https://toddmccready.github.io/disize/reference/extract_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the parameters out of an optimized model. — extract_sf","title":"Extract the parameters out of an optimized model. — extract_sf","text":"Extract parameters optimized model.","code":""},{"path":"https://toddmccready.github.io/disize/reference/extract_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the parameters out of an optimized model. — extract_sf","text":"","code":"extract_sf(cur_fit)"},{"path":"https://toddmccready.github.io/disize/reference/extract_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the parameters out of an optimized model. — extract_sf","text":"cur_fit CmdStanMLE object stan_data formatted Stan data used fit model.","code":""},{"path":"https://toddmccready.github.io/disize/reference/split_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Split design formula into fixed and random effects. — split_formula","title":"Split design formula into fixed and random effects. — split_formula","text":"Split design formula fixed random effects.","code":""},{"path":"https://toddmccready.github.io/disize/reference/split_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split design formula into fixed and random effects. — split_formula","text":"","code":"split_formula(design_formula)"},{"path":"https://toddmccready.github.io/disize/reference/split_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split design formula into fixed and random effects. — split_formula","text":"design_formula design formula","code":""}]

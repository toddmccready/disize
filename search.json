[{"path":"https://toddmccready.github.io/disize/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 disize authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"an-example-with-deseq2","dir":"Articles","previous_headings":"","what":"An example with DESeq2","title":"An introduction to disize","text":"see disize action, analyzing following dataset pasilla package DESeq2.","code":"suppressPackageStartupMessages({     library(pasilla)     library(dplyr)     library(disize)     library(DESeq2) })"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"reading-in-data","dir":"Articles","previous_headings":"An example with DESeq2","what":"Reading in data","title":"An introduction to disize","text":"","code":"# Grab filepaths counts_path <- system.file(     \"extdata\",     \"pasilla_gene_counts.tsv\",     package=\"pasilla\",     mustWork=TRUE ) metadata_path <- system.file(     \"extdata\",     \"pasilla_sample_annotation.csv\",     package=\"pasilla\",     mustWork=TRUE )  # Read in data counts <- as.matrix(read.csv(counts_path, sep = \"\\t\", row.names = \"gene_id\")) |>     t()  metadata <- read.csv(metadata_path) metadata <- metadata |>     dplyr::mutate(obs_id = sub(\"fb\", \"\", metadata$file)) |>     dplyr::select(obs_id, condition, type) |>     dplyr::mutate(across(c(condition, type), as.factor))"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"inspecting-the-study-design","dir":"Articles","previous_headings":"An example with DESeq2","what":"Inspecting the study design","title":"An introduction to disize","text":"dataset derived study investigating effect various RNA binding proteins (RBPs) alternative splicing regulation. authors partitioned D. melanogaster cells two different conditions: samples condition = treated treated dsRNAs knockdown expression via RNAi, condition = untreated left alone control. Additionally, two sets duplicates processed condition different technologies used sequencing (single-read vs paired-end). safe ’ll keep definition “batch” granular possible (meaning every sample treated batch-effect), however, disize supports arbitrary batch membership explored [WIP]. metadata object contains information experimental design: Evidently, one sample thrown away! absence batch-effects interested effects condition, design_formula :","code":"print(metadata) #>       obs_id condition        type #> 1   treated1   treated single-read #> 2   treated2   treated  paired-end #> 3   treated3   treated  paired-end #> 4 untreated1 untreated single-read #> 5 untreated2 untreated single-read #> 6 untreated3 untreated  paired-end #> 7 untreated4 untreated  paired-end design_formula <- ~ condition"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"estimating-size-factors","dir":"Articles","previous_headings":"An example with DESeq2","what":"Estimating size factors","title":"An introduction to disize","text":"","code":"# First batch definition size_factors <- disize::disize(     design_formula,     counts,     metadata,     batch_name = \"obs_id\",     obs_name = \"obs_id\" # needed to order 'counts' correctly ) #> Formatting data... #> Estimating size factors... (Max ETA: ~70.5s) #> Finised in 64.7s!"},{"path":"https://toddmccready.github.io/disize/articles/disize.html","id":"running-deseq","dir":"Articles","previous_headings":"An example with DESeq2","what":"Running DESeq","title":"An introduction to disize","text":"size factors inserted DESeqDataSet object, analysis proceeds normally.","code":"# Constructing DESeqDataSet object dds <- DESeq2::DESeqDataSetFromMatrix(     countData = t(counts[metadata$obs_id, ]),     colData = metadata,     design = design_formula ) DESeq2::sizeFactors(dds) <- exp(size_factors) # Insert size factors  # Run analysis dds <- DESeq2::DESeq(dds) #> using pre-existing size factors #> estimating dispersions #> gene-wise dispersion estimates #> mean-dispersion relationship #> final dispersion estimates #> fitting model and testing  # Print results print(results(dds)) #> log2 fold change (MLE): condition untreated vs treated  #> Wald test p-value: condition untreated vs treated  #> DataFrame with 14599 rows and 6 columns #>                baseMean log2FoldChange     lfcSE      stat    pvalue      padj #>               <numeric>      <numeric> <numeric> <numeric> <numeric> <numeric> #> FBgn0000003    0.183606     -0.9857506  3.804283 -0.259116 0.7955458        NA #> FBgn0000008  102.823583      0.0480676  0.220402  0.218090 0.8273587   0.95747 #> FBgn0000014    1.151175      0.5750640  2.108700  0.272710 0.7850760        NA #> FBgn0000015    0.920188      1.9284878  2.065835  0.933515 0.3505542        NA #> FBgn0000017 4710.475562      0.2882284  0.123070  2.341989 0.0191813   0.12899 #> ...                 ...            ...       ...       ...       ...       ... #> FBgn0261571 9.10092e-02     -0.8456069  3.809401 -0.221979  0.824330        NA #> FBgn0261572 6.72827e+00      1.0103521  0.764586  1.321436  0.186356        NA #> FBgn0261573 2.42364e+03      0.0364862  0.116188  0.314026  0.753501  0.931582 #> FBgn0261574 5.24892e+03      0.0399011  0.190998  0.208909  0.834519  0.957764 #> FBgn0261575 1.15034e+01     -0.0957019  0.923661 -0.103611  0.917478  0.982144"},{"path":"https://toddmccready.github.io/disize/articles/implementation.html","id":"estimation","dir":"Articles","previous_headings":"","what":"Estimation","title":"Implementation of disize","text":"Since posterior distribution \\mathbf{s} heavily concentrated typical datasets thousands features, sufficient quickly provide point estimate \\mathbf{s} delegate estimation model coefficients existing tools like DESeq2 edgeR (replacing small normalization step workflows). disize uses Stan’s L-BFGS optimization algorithm find model’s maximum posteriori (MAP) \\mathbf{s}. end fewer iterations needed parameters converge using heuristic guess long procedure run ; followed diagnostic ensure size factors converged.","code":""},{"path":"https://toddmccready.github.io/disize/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Todd McCready. Author, maintainer.","code":""},{"path":"https://toddmccready.github.io/disize/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCready T (2025). disize: Design Informed Size Factor Estimation. R package version 0.4.26, https://toddmccready.github.io/disize/.","code":"@Manual{,   title = {disize: Design Informed Size Factor Estimation},   author = {Todd McCready},   year = {2025},   note = {R package version 0.4.26},   url = {https://toddmccready.github.io/disize/}, }"},{"path":"https://toddmccready.github.io/disize/index.html","id":"disize","dir":"","previous_headings":"","what":"Design Informed Size Factor Estimation","title":"Design Informed Size Factor Estimation","text":"Design informed size factor estimation (disize) normalization method meant alternative DESeq2’s median rations edgeR’s trimmed mean M values","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Design Informed Size Factor Estimation","text":"Take look Get started page familiarize disize.","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Design Informed Size Factor Estimation","text":"disize yet CRAN, installation one-liner install.packages:","code":""},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-remotes","dir":"","previous_headings":"","what":"With remotes","title":"Design Informed Size Factor Estimation","text":"","code":"# Install disize remotes::install_github(\"https://github.com/toddmccready/disize\")  # Set up CmdStan toolchain cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/index.html","id":"with-rv","dir":"","previous_headings":"","what":"With rv","title":"Design Informed Size Factor Estimation","text":"Add following entries rproject.toml file(already present): install CmdStan toolchain R:","code":"repositories = [     # ...     { alias = \"STAN\", url = \"https://stan-dev.r-universe.dev\" },     # ... ]  # ...  dependencies = [     # ...     { name = \"disize\", git = \"https://github.com/toddmccready/disize\", tag = \"v0.4.26\" },     # ... ] cmdstanr::install_cmdstan()"},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":null,"dir":"Reference","previous_headings":"","what":"Design-informed size factor estimation — disize","title":"Design-informed size factor estimation — disize","text":"Design-informed size factor estimation","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Design-informed size factor estimation — disize","text":"","code":"disize(   design_formula,   counts,   metadata,   batch_name,   obs_name = \"obs_id\",   n_feats = 10000L,   n_subset = 50L,   n_iters = \"auto\",   n_threads = max(1L, parallel::detectCores() - 1L),   grainsize = ceiling(n_feats/n_threads),   init_alpha = 1e-06,   verbose = 3L )"},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Design-informed size factor estimation — disize","text":"design_formula formula describing experimental design. counts (observation x feature) count matrix. metadata dataframe containing observation-level metadata. batch_name identifier batch column 'metadata'. obs_name identifier observation column 'metadata', defaults \"obs_id\". n_feats number features used estimation, defaults features (cap 10000). n_subset number observations per experimental unit used estimation, defaults 50 (useful scRNA-seq experiments). n_iters number iterations used single optimization pass. n_threads number threads use parallel processing. grainsize grainsize used partitioning data across threads ( highly encouraged leave default value). verbose verbosity level (1: errors, 2: also allows warnings, 3: also allows messages, 4: also prints additional output useful debugging).","code":""},{"path":"https://toddmccready.github.io/disize/reference/disize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Design-informed size factor estimation — disize","text":"named numeric vector containing size factor estimates.","code":""}]
